{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunad\\\\Downloads\\\\Consultancy-main\\\\Consultancy-main\\\\frontend\\\\src\\\\Electrical\\\\ElectricalMaintenance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Swal from \"sweetalert2\";\nimport \"./Electrical.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sections = [\"TOP_APRON\", \"MIDDLE_APRON\", \"BOTTOM_APRON\"];\nconst ElectricalMaintenance = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [cumulativeData, setCumulativeData] = useState([]);\n  const [formData, setFormData] = useState(sections.reduce((acc, section) => {\n    acc[section] = {\n      type: \"\",\n      date: \"\"\n    };\n    return acc;\n  }, {}));\n\n  // ✅ Automatically Calculate Life in Days, Months & Next Schedule\n  const calculateLife = date => {\n    if (!date) return {\n      days: 0,\n      months: 0,\n      nextSchedule: \"-\"\n    };\n    const currentDate = new Date();\n    const inputDate = new Date(date);\n    const diffTime = Math.abs(currentDate - inputDate);\n    const lifeInDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    const lifeInMonths = (lifeInDays / 30.44).toFixed(2);\n    const nextSchedule = new Date(inputDate);\n    nextSchedule.setFullYear(nextSchedule.getFullYear() + 2);\n    const formattedNext = nextSchedule.toISOString().split(\"T\")[0];\n    return {\n      days: lifeInDays,\n      months: lifeInMonths,\n      nextSchedule: formattedNext\n    };\n  };\n\n  // ✅ Fetch Cumulative Data from Backend\n  const fetchCumulativeData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/electrical-all\");\n      const data = await response.json();\n      if (response.ok) {\n        // Convert data to cumulative format\n        const formattedData = data.flatMap(record => Object.entries(record.sections).map(([section, details]) => ({\n          date: record.date,\n          section,\n          type: details.type,\n          lifeInDays: details.lifeInDays,\n          lifeInMonths: details.lifeInMonths,\n          nextSchedule: details.nextSchedule\n        })));\n        setCumulativeData(formattedData);\n      } else {\n        console.error(\"Failed to fetch data:\", data.message);\n      }\n    } catch (error) {\n      console.error(\"Error fetching cumulative data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchCumulativeData();\n  }, []);\n\n  // ✅ Handle Form Changes\n  const handleChange = (section, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: value\n      }\n    }));\n  };\n\n  // ✅ Handle Form Submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formattedSections = sections.reduce((acc, section) => {\n      const {\n        type,\n        date\n      } = formData[section];\n      const {\n        days,\n        months,\n        nextSchedule\n      } = calculateLife(date);\n      acc[section] = {\n        type,\n        date,\n        lifeInDays: days,\n        lifeInMonths: months,\n        nextSchedule\n      };\n      return acc;\n    }, {});\n    try {\n      const response = await fetch(\"http://localhost:5000/add-electrical\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          sections: formattedSections\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        Swal.fire({\n          title: \"Success!\",\n          text: result.message,\n          icon: \"success\",\n          timer: 2000\n        });\n        fetchCumulativeData(); // ✅ Refresh data after submission\n      } else {\n        Swal.fire({\n          title: \"Error!\",\n          text: result.message,\n          icon: \"error\",\n          timer: 2000\n        });\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      Swal.fire({\n        title: \"Error!\",\n        text: \"Failed to submit data\",\n        icon: \"error\",\n        timer: 2000\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary mb-4\",\n          children: \"Enter Maintenance Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"bg-light p-4 rounded shadow-lg\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Select Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: selectedDate,\n              onChange: e => setSelectedDate(e.target.value),\n              className: \"form-control\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), sections.map(section => {\n            var _formData$section, _formData$section2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card mb-3 p-3 shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-success\",\n                children: section\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_formData$section = formData[section]) === null || _formData$section === void 0 ? void 0 : _formData$section.type) || \"\",\n                  onChange: e => handleChange(section, \"type\", e.target.value),\n                  className: \"form-control\",\n                  placeholder: \"Enter machine type (LR, JEETS, etc.)\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: ((_formData$section2 = formData[section]) === null || _formData$section2 === void 0 ? void 0 : _formData$section2.date) || \"\",\n                  onChange: e => handleChange(section, \"date\", e.target.value),\n                  className: \"form-control\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, section, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100 mt-4\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary mb-4\",\n          children: \"Cumulative Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), cumulativeData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-striped rounded shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Months\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Next Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: cumulativeData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.section\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.lifeInDays\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.lifeInMonths\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.nextSchedule\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"No cumulative data available. Enter details first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary text-center\",\n          children: \"Graph Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: cumulativeData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"lifeInDays\",\n              stroke: \"#8884d8\",\n              name: \"Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"lifeInMonths\",\n              stroke: \"#82ca9d\",\n              name: \"Months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(ElectricalMaintenance, \"ndhOR8lWB4ytk6Y6Vmfm1Gmoflw=\");\n_c = ElectricalMaintenance;\nexport default ElectricalMaintenance;\nvar _c;\n$RefreshReg$(_c, \"ElectricalMaintenance\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Swal","jsxDEV","_jsxDEV","sections","ElectricalMaintenance","_s","selectedDate","setSelectedDate","cumulativeData","setCumulativeData","formData","setFormData","reduce","acc","section","type","date","calculateLife","days","months","nextSchedule","currentDate","Date","inputDate","diffTime","Math","abs","lifeInDays","ceil","lifeInMonths","toFixed","setFullYear","getFullYear","formattedNext","toISOString","split","fetchCumulativeData","response","fetch","data","json","ok","formattedData","flatMap","record","Object","entries","map","details","console","error","message","handleChange","field","value","prev","handleSubmit","e","preventDefault","formattedSections","method","headers","body","JSON","stringify","result","fire","title","text","icon","timer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","required","_formData$section","_formData$section2","placeholder","length","item","index","width","height","strokeDasharray","dataKey","stroke","name","_c","$RefreshReg$"],"sources":["C:/Users/gunad/Downloads/Consultancy-main/Consultancy-main/frontend/src/Electrical/ElectricalMaintenance.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./Electrical.css\";\r\n\r\nconst sections = [\"TOP_APRON\", \"MIDDLE_APRON\", \"BOTTOM_APRON\"];\r\n\r\nconst ElectricalMaintenance = () => {\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [cumulativeData, setCumulativeData] = useState([]);\r\n  const [formData, setFormData] = useState(\r\n    sections.reduce((acc, section) => {\r\n      acc[section] = { type: \"\", date: \"\" };\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  // ✅ Automatically Calculate Life in Days, Months & Next Schedule\r\n  const calculateLife = (date) => {\r\n    if (!date) return { days: 0, months: 0, nextSchedule: \"-\" };\r\n\r\n    const currentDate = new Date();\r\n    const inputDate = new Date(date);\r\n    const diffTime = Math.abs(currentDate - inputDate);\r\n    const lifeInDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    const lifeInMonths = (lifeInDays / 30.44).toFixed(2);\r\n\r\n    const nextSchedule = new Date(inputDate);\r\n    nextSchedule.setFullYear(nextSchedule.getFullYear() + 2);\r\n    const formattedNext = nextSchedule.toISOString().split(\"T\")[0];\r\n\r\n    return {\r\n      days: lifeInDays,\r\n      months: lifeInMonths,\r\n      nextSchedule: formattedNext,\r\n    };\r\n  };\r\n\r\n  // ✅ Fetch Cumulative Data from Backend\r\n  const fetchCumulativeData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/electrical-all\");\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        // Convert data to cumulative format\r\n        const formattedData = data.flatMap((record) =>\r\n          Object.entries(record.sections).map(([section, details]) => ({\r\n            date: record.date,\r\n            section,\r\n            type: details.type,\r\n            lifeInDays: details.lifeInDays,\r\n            lifeInMonths: details.lifeInMonths,\r\n            nextSchedule: details.nextSchedule,\r\n          }))\r\n        );\r\n\r\n        setCumulativeData(formattedData);\r\n      } else {\r\n        console.error(\"Failed to fetch data:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching cumulative data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCumulativeData();\r\n  }, []);\r\n\r\n  // ✅ Handle Form Changes\r\n  const handleChange = (section, field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [section]: { ...prev[section], [field]: value },\r\n    }));\r\n  };\r\n\r\n  // ✅ Handle Form Submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formattedSections = sections.reduce((acc, section) => {\r\n      const { type, date } = formData[section];\r\n      const { days, months, nextSchedule } = calculateLife(date);\r\n\r\n      acc[section] = {\r\n        type,\r\n        date,\r\n        lifeInDays: days,\r\n        lifeInMonths: months,\r\n        nextSchedule,\r\n      };\r\n\r\n      return acc;\r\n    }, {});\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/add-electrical\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          date: selectedDate,\r\n          sections: formattedSections,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        Swal.fire({\r\n          title: \"Success!\",\r\n          text: result.message,\r\n          icon: \"success\",\r\n          timer: 2000,\r\n        });\r\n        fetchCumulativeData(); // ✅ Refresh data after submission\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Error!\",\r\n          text: result.message,\r\n          icon: \"error\",\r\n          timer: 2000,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      Swal.fire({\r\n        title: \"Error!\",\r\n        text: \"Failed to submit data\",\r\n        icon: \"error\",\r\n        timer: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-5\">\r\n\r\n      {/* ✅ Form Section */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <h3 className=\"text-primary mb-4\">Enter Maintenance Data</h3>\r\n          <form className=\"bg-light p-4 rounded shadow-lg\" onSubmit={handleSubmit}>\r\n            \r\n            <div className=\"mb-4\">\r\n              <label className=\"form-label\">Select Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                value={selectedDate}\r\n                onChange={(e) => setSelectedDate(e.target.value)}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {sections.map((section) => (\r\n              <div key={section} className=\"card mb-3 p-3 shadow-sm\">\r\n                <h5 className=\"text-success\">{section}</h5>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Type:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData[section]?.type || \"\"}\r\n                    onChange={(e) => handleChange(section, \"type\", e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter machine type (LR, JEETS, etc.)\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Date:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData[section]?.date || \"\"}\r\n                    onChange={(e) => handleChange(section, \"date\", e.target.value)}\r\n                    className=\"form-control\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary w-100 mt-4\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* ✅ Cumulative Data Table */}\r\n        <div className=\"col-md-6\">\r\n          <h3 className=\"text-primary mb-4\">Cumulative Data</h3>\r\n\r\n          {cumulativeData.length > 0 ? (\r\n            <table className=\"table table-bordered table-striped rounded shadow-lg\">\r\n              <thead className=\"table-dark\">\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Section</th>\r\n                  <th>Type</th>\r\n                  <th>Days</th>\r\n                  <th>Months</th>\r\n                  <th>Next Schedule</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {cumulativeData.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>{item.date}</td>\r\n                    <td>{item.section}</td>\r\n                    <td>{item.type}</td>\r\n                    <td>{item.lifeInDays}</td>\r\n                    <td>{item.lifeInMonths}</td>\r\n                    <td>{item.nextSchedule}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <div className=\"alert alert-warning\">\r\n              No cumulative data available. Enter details first.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* ✅ Graph Visualization */}\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-12\">\r\n          <h3 className=\"text-primary text-center\">Graph Visualization</h3>\r\n          <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={cumulativeData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"lifeInDays\" stroke=\"#8884d8\" name=\"Days\" />\r\n              <Line type=\"monotone\" dataKey=\"lifeInMonths\" stroke=\"#82ca9d\" name=\"Months\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ElectricalMaintenance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}